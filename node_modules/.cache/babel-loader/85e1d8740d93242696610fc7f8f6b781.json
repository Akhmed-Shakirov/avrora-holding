{"remainingRequest":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/babel-loader/lib/index.js!/Users/shakirov/Desktop/Fullstack/avrora/src/store/modules/posts.js","dependencies":[{"path":"/Users/shakirov/Desktop/Fullstack/avrora/src/store/modules/posts.js","mtime":1648564911730},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/babel.config.js","mtime":1648522801080},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/cache-loader/dist/cjs.js","mtime":1648522787455},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/babel-loader/lib/index.js","mtime":1648522787952}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHN0YXRlID0gewogIGRpdmlzaW9uczogW10KfTsKdmFyIGdldHRlcnMgPSB7fTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRQb3N0czogZnVuY3Rpb24gc2V0UG9zdHMoc3RhdGUsIHBvc3RzKSB7CiAgICBzdGF0ZS5wb3N0cyA9IHBvc3RzOwogIH0sCiAgc2V0U2VhcmNoOiBmdW5jdGlvbiBzZXRTZWFyY2goc3RhdGUsIHNlYXJjaCkgewogICAgc3RhdGUuc2VhcmNoID0gc2VhcmNoOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZ2V0UG9zdHM6IGZ1bmN0aW9uIGdldFBvc3RzKF9yZWYpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHJldHVybiBheGlvcy5nZXQoImh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cy8iKS50aGVuKGZ1bmN0aW9uIChwb3N0cykgewogICAgICBjb21taXQoJ3NldFBvc3RzJywgcG9zdHMuZGF0YSk7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/Users/shakirov/Desktop/Fullstack/avrora/src/store/modules/posts.js"],"names":["axios","state","divisions","getters","mutations","setPosts","posts","setSearch","search","actions","getPosts","commit","get","then","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAE;AADD,CAAd;AAIA,IAAMC,OAAO,GAAG,EAAhB;AAIA,IAAMC,SAAS,GAAG;AACdC,EAAAA,QADc,oBACLJ,KADK,EACEK,KADF,EACS;AACnBL,IAAAA,KAAK,CAACK,KAAN,GAAcA,KAAd;AACH,GAHa;AAIdC,EAAAA,SAJc,qBAIJN,KAJI,EAIGO,MAJH,EAIW;AACrBP,IAAAA,KAAK,CAACO,MAAN,GAAeA,MAAf;AACH;AANa,CAAlB;AASA,IAAMC,OAAO,GAAG;AACZC,EAAAA,QADY,0BACS;AAAA,QAAVC,MAAU,QAAVA,MAAU;AACjB,WAAOX,KAAK,CAACY,GAAN,gDACFC,IADE,CACG,UAACP,KAAD,EAAW;AACbK,MAAAA,MAAM,CAAC,UAAD,EAAaL,KAAK,CAACQ,IAAnB,CAAN;AACH,KAHE,CAAP;AAIH;AANW,CAAhB;AAUA,eAAe;AACXb,EAAAA,KAAK,EAALA,KADW;AAEXE,EAAAA,OAAO,EAAPA,OAFW;AAGXC,EAAAA,SAAS,EAATA,SAHW;AAIXK,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import axios from 'axios'\n\nconst state = {\n    divisions: []\n}\n\nconst getters = {\n\n}\n\nconst mutations = {\n    setPosts(state, posts) {\n        state.posts = posts;\n    },\n    setSearch(state, search) {\n        state.search = search;\n    },\n}\n\nconst actions = {\n    getPosts({ commit }) {\n        return axios.get(`https://jsonplaceholder.typicode.com/posts/`)\n            .then((posts) => {\n                commit('setPosts', posts.data)\n            })\n    },\n}\n\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}\n"]}]}