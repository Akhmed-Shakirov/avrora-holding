{"remainingRequest":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/babel-loader/lib/index.js!/Users/shakirov/Desktop/Fullstack/avrora/src/directives/VIntersection.js","dependencies":[{"path":"/Users/shakirov/Desktop/Fullstack/avrora/src/directives/VIntersection.js","mtime":1648523005658},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/babel.config.js","mtime":1648522801080},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/cache-loader/dist/cjs.js","mtime":1648522787455},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/babel-loader/lib/index.js","mtime":1648522787952}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoZWwsIGJpbmRpbmcpIHsKICAgIHZhciBvcHRpb25zID0gewogICAgICByb290TWFyZ2luOiAnMHB4JywKICAgICAgdGhyZXNob2xkOiAxLjAKICAgIH07CgogICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gY2FsbGJhY2soZW50cmllcywgb2JzZXJ2ZXIpIHsKICAgICAgaWYgKGVudHJpZXNbMF0uaXNJbnRlcnNlY3RpbmcpIHsKICAgICAgICBjb25zb2xlLmxvZygnU3RhcnQgdHJpZ2dlci4uLicpOwogICAgICB9CiAgICB9OwoKICAgIHZhciBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihjYWxsYmFjaywgb3B0aW9ucyk7CiAgICBvYnNlcnZlci5vYnNlcnZlKGVsKTsKICB9LAogIG5hbWU6ICdpbnRlcnNlY3Rpb24nCn07"},{"version":3,"sources":["/Users/shakirov/Desktop/Fullstack/avrora/src/directives/VIntersection.js"],"names":["mounted","el","binding","options","rootMargin","threshold","callback","entries","observer","isIntersecting","console","log","IntersectionObserver","observe","name"],"mappings":"AAAA,eAAgB;AACZA,EAAAA,OADY,mBACJC,EADI,EACAC,OADA,EACS;AACjB,QAAMC,OAAO,GAAG;AACZC,MAAAA,UAAU,EAAE,KADA;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAhB;;AAIA,QAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAUC,QAAV,EAAuB;AACpC,UAAID,OAAO,CAAC,CAAD,CAAP,CAAWE,cAAf,EAA+B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,KAJD;;AAKA,QAAMH,QAAQ,GAAG,IAAII,oBAAJ,CAAyBN,QAAzB,EAAmCH,OAAnC,CAAjB;AACAK,IAAAA,QAAQ,CAACK,OAAT,CAAiBZ,EAAjB;AACH,GAbW;AAcZa,EAAAA,IAAI,EAAE;AAdM,CAAhB","sourcesContent":["export default  {\n    mounted(el, binding) {\n        const options = {\n            rootMargin: '0px',\n            threshold: 1.0\n        }\n        const callback = (entries, observer) => {\n            if (entries[0].isIntersecting) {\n                console.log('Start trigger...')\n            }\n        }\n        const observer = new IntersectionObserver(callback, options)\n        observer.observe(el)\n    },\n    name: 'intersection'\n}\n"]}]}