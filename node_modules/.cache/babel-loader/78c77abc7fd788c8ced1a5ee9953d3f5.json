{"remainingRequest":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/babel-loader/lib/index.js!/Users/shakirov/Desktop/Fullstack/avrora/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/shakirov/Desktop/Fullstack/avrora/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shakirov/Desktop/Fullstack/avrora/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/shakirov/Desktop/Fullstack/avrora/src/App.vue?vue&type=template&id=7ba5bd90&scoped=true","dependencies":[{"path":"/Users/shakirov/Desktop/Fullstack/avrora/src/App.vue","mtime":1649259810820},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/babel.config.js","mtime":1648522801080},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/cache-loader/dist/cjs.js","mtime":1648522787455},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/babel-loader/lib/index.js","mtime":1648522787952},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1648522787928},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/cache-loader/dist/cjs.js","mtime":1648522787455},{"path":"/Users/shakirov/Desktop/Fullstack/avrora/node_modules/vue-loader-v16/dist/index.js","mtime":1648522787725}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBUZWxlcG9ydCBhcyBfVGVsZXBvcnQsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7CmltcG9ydCBfaW1wb3J0c18wIGZyb20gJ0AvYXNzZXRzL2xvZ28uc3ZnJzsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi03YmE1YmQ5MCIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogX2ltcG9ydHNfMCwKICAgIGNsYXNzOiAibG9nbyIsCiAgICBhbHQ6ICJsb2dvIgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJjb250YWluZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDEiLCBudWxsLCAi0J7RgNCz0LDQvdC40LfQsNGG0LjQvtC90L3QsNGPINGB0YLRgNGD0LrRgtGD0YDQsCIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiICsg0JTQvtCx0LDQstC40YLRjCAiKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfbXlfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoIm15LWJ1dHRvbiIpOwoKICB2YXIgX2NvbXBvbmVudF9kaXZpc2lvbnNfbGlzdCA9IF9yZXNvbHZlQ29tcG9uZW50KCJkaXZpc2lvbnMtbGlzdCIpOwoKICB2YXIgX2NvbXBvbmVudF9kaXZpc2lvbnNfY3JlYXRlX2xpc3QgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZGl2aXNpb25zLWNyZWF0ZS1saXN0Iik7CgogIHZhciBfY29tcG9uZW50X215X2RpYWxvZyA9IF9yZXNvbHZlQ29tcG9uZW50KCJteS1kaWFsb2ciKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfaG9pc3RlZF8xLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2hvaXN0ZWRfMywgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfbXlfYnV0dG9uLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLmRpYWxvZ1Zpc2libGUgPSAhJGRhdGEuZGlhbG9nVmlzaWJsZTsKICAgIH0pCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzRdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9jdHguZGl2aXNpb25zLmxlbmd0aCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2RpdmlzaW9uc19saXN0LCB7CiAgICBkaXZpc2lvbnM6IF9jdHguZGl2aXNpb25zLAogICAga2V5OiBfY3R4LmRpdmlzaW9ucywKICAgIG9uUmVtb3ZlRGl2aXNpb246ICRvcHRpb25zLnJlbW92ZURpdmlzaW9uLAogICAgb25VcGRhdGVEaXZpc2lvbjogJG9wdGlvbnMudXBkYXRlRGl2aXNpb24KICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiZGl2aXNpb25zIiwgIm9uUmVtb3ZlRGl2aXNpb24iLCAib25VcGRhdGVEaXZpc2lvbiJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSwgKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9UZWxlcG9ydCwgewogICAgdG86ICIjbW9kYWxlcyIKICB9LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfbXlfZGlhbG9nLCB7CiAgICBzaG93OiAkZGF0YS5kaWFsb2dWaXNpYmxlLAogICAgIm9uVXBkYXRlOnNob3ciOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLmRpYWxvZ1Zpc2libGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9kaXZpc2lvbnNfY3JlYXRlX2xpc3QsIHsKICAgICAgICBvbkFkZE5ld0RpdmlzaW9uczogJG9wdGlvbnMuYWRkTmV3RGl2aXNpb25zCiAgICAgIH0sIG51bGwsIDgKICAgICAgLyogUFJPUFMgKi8KICAgICAgLCBbIm9uQWRkTmV3RGl2aXNpb25zIl0pXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJzaG93Il0pXSkpXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9"},{"version":3,"mappings":";OACSA,gBAAuB;;;;;;;sBAA5BC,oBAAqD,KAArD,EAAqD;AAAhDC,OAAuB,EAAvBF,UAAgD;AAAxBG,SAAK,EAAC,MAAkB;AAAXC,OAAG,EAAC;AAAO,GAArD;;AAAA;;;;AACKD,OAAK,EAAC;;;;sBACPF,oBAAkC,IAAlC,EAAkC,IAAlC,EAAI,2BAAJ,EAA6B;AAAA;AAA7B;;;+CACmD;;;;;;;;;;;6DAHvDI,YACAJ,oBAYM,KAZN,cAYM,CAXFK,UAWE,EAVFC,aAEYC,oBAFZ,EAEY;AAFAC,WAAK;AAAA,aAAEC,sBAAa,CAAIA,mBAAnB;AAAA;AAEL,GAFZ;sBAAmD;AAAA,aAEnD,YAFmD;AAAA;;;;GAAnD,CAUE,EANQC,eAAUC,wBADpBC,aAMEC,yBANF,EAME;AAJGC,aAAS,EAAEJ,cAId;AAHGK,OAAG,EAAEL,cAGR;AAFGM,oBAAc,EAAEC,uBAEnB;AADGC,oBAAc,EAAED;AACnB,GANF;;AAAA,+FAOE,CAZN,kBAaAL,aAIWO,SAJX,EAIW;AAJDC,MAAE,EAAC;AAIF,GAJX,EAAuB,CACnBd,aAEYe,oBAFZ,EAEY;AAFOC,QAAI,EAAEb,mBAEb;;aAFaA,sBAAac;;AAE1B,GAFZ;sBACI;AAAA,aAA2D,CAA3DjB,aAA2DkB,gCAA3D,EAA2D;AAAnCC,yBAAe,EAAER;AAAkB,OAA3D,EAAwD,IAAxD,EAAwD;AAAA;AAAxD,QAAwD,qBAAxD,CAA2D,CAA3D;AAAA;;;;GADJ;;AAAA,aADmB,CAAvB","names":["_imports_0","_createElementVNode","src","class","alt","_hoisted_1","_hoisted_3","_createVNode","_component_my_button","onClick","$data","_ctx","length","_createBlock","_component_divisions_list","divisions","key","onRemoveDivision","$options","onUpdateDivision","_Teleport","to","_component_my_dialog","show","$event","_component_divisions_create_list","onAddNewDivisions"],"sourceRoot":"","sources":["/Users/shakirov/Desktop/Fullstack/avrora/src/App.vue"],"sourcesContent":["<template>\n    <img src=\"@/assets/logo.svg\" class=\"logo\" alt=\"logo\">\n    <div class=\"container\">\n        <h1>Организационная структура</h1>\n        <my-button @click=\"dialogVisible = !dialogVisible\">\n            + Добавить\n        </my-button>\n        <divisions-list\n            v-if=\"divisions.length\"\n            :divisions=\"divisions\"\n            :key=\"divisions\"\n            @removeDivision=\"removeDivision\"\n            @updateDivision=\"updateDivision\"\n        />\n    </div>\n    <teleport to=\"#modales\">\n        <my-dialog v-model:show=\"dialogVisible\">\n            <divisions-create-list @addNewDivisions=\"addNewDivisions\"/>\n        </my-dialog>\n    </teleport>\n</template>\n\n<script>\nimport DivisionsList from \"@/components/DivisionsList\";\nimport DivisionsCreateList from \"@/components/DivisionsCreateList\";\nimport {mapState, mapGetters, mapActions, mapMutations} from 'vuex'\n\nexport default {\n    name: 'App',\n    components: {\n        DivisionsList,\n        DivisionsCreateList\n    },\n    data() {\n        return {\n            dialogVisible: false\n        }\n    },\n    computed: {\n        ...mapState({\n            divisions: state => state.divisions.divisions\n        })\n    },\n    methods: {\n        ...mapActions([\n            \"getDivisions\",\n            \"addDivisions\",\n            \"deleteDivisions\",\n            \"editDivisions\"\n        ]),\n        addNewDivisions(event) {\n            for (const item of event) {\n                this.addDivisions(item)\n                    .then(() => {\n                        this.getDivisions();\n                    })\n            }\n            this.dialogVisible = false\n        },\n        removeDivision(event) {\n            this.deleteDivisions(event)\n                .then(() => {\n                    this.getDivisions();\n                })\n        },\n        updateDivision(event) {\n            const newDivision = this.divisions.filter(item => item.id == event)\n            const division = {\n                id: newDivision[0].id,\n                name: newDivision[0].name,\n                count: newDivision[0].count,\n                children: newDivision[0].children\n            }\n            this.editDivisions(division)\n                .then(() => {\n                    this.getDivisions();\n                })\n        }\n    },\n    mounted() {\n        this.getDivisions()\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .logo {\n        position: absolute;\n        top: 20px;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n    h1 {\n        background: $background-block;\n        color: $main-title;\n        border-radius: 4px;\n        font-size: 25px;\n        padding: 10px 20px;\n    }\n    button {\n        margin: 20px 0;\n    }\n</style>\n"]}]}