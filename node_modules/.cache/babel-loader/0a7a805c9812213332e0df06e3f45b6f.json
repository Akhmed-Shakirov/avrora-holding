{"remainingRequest":"/Users/shakirov/Desktop/Новая папка/node_modules/babel-loader/lib/index.js!/Users/shakirov/Desktop/Новая папка/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/shakirov/Desktop/Новая папка/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shakirov/Desktop/Новая папка/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/shakirov/Desktop/Новая папка/src/App.vue?vue&type=template&id=7ba5bd90&scoped=true","dependencies":[{"path":"/Users/shakirov/Desktop/Новая папка/src/App.vue","mtime":1649259810820},{"path":"/Users/shakirov/Desktop/Новая папка/babel.config.js","mtime":1648522801080},{"path":"/Users/shakirov/Desktop/Новая папка/node_modules/cache-loader/dist/cjs.js","mtime":1648522787455},{"path":"/Users/shakirov/Desktop/Новая папка/node_modules/babel-loader/lib/index.js","mtime":1648522787952},{"path":"/Users/shakirov/Desktop/Новая папка/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1648522787928},{"path":"/Users/shakirov/Desktop/Новая папка/node_modules/cache-loader/dist/cjs.js","mtime":1648522787455},{"path":"/Users/shakirov/Desktop/Новая папка/node_modules/vue-loader-v16/dist/index.js","mtime":1648522787725}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBUZWxlcG9ydCBhcyBfVGVsZXBvcnQsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7CmltcG9ydCBfaW1wb3J0c18wIGZyb20gJ0AvYXNzZXRzL2xvZ28uc3ZnJzsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi03YmE1YmQ5MCIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogX2ltcG9ydHNfMCwKICAgICJjbGFzcyI6ICJsb2dvIiwKICAgIGFsdDogImxvZ28iCiAgfSwgbnVsbCwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMiA9IHsKICAiY2xhc3MiOiAiY29udGFpbmVyIgp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImgxIiwgbnVsbCwgItCe0YDQs9Cw0L3QuNC30LDRhtC40L7QvdC90LDRjyDRgdGC0YDRg9C60YLRg9GA0LAiLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiArINCU0L7QsdCw0LLQuNGC0YwgIik7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X215X2J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJteS1idXR0b24iKTsKCiAgdmFyIF9jb21wb25lbnRfZGl2aXNpb25zX2xpc3QgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZGl2aXNpb25zLWxpc3QiKTsKCiAgdmFyIF9jb21wb25lbnRfZGl2aXNpb25zX2NyZWF0ZV9saXN0ID0gX3Jlc29sdmVDb21wb25lbnQoImRpdmlzaW9ucy1jcmVhdGUtbGlzdCIpOwoKICB2YXIgX2NvbXBvbmVudF9teV9kaWFsb2cgPSBfcmVzb2x2ZUNvbXBvbmVudCgibXktZGlhbG9nIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2hvaXN0ZWRfMSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19ob2lzdGVkXzMsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X215X2J1dHRvbiwgewogICAgb25DbGljazogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5kaWFsb2dWaXNpYmxlID0gISRkYXRhLmRpYWxvZ1Zpc2libGU7CiAgICB9KQogIH0sIHsKICAgICJkZWZhdWx0IjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzRdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9jdHguZGl2aXNpb25zLmxlbmd0aCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2RpdmlzaW9uc19saXN0LCB7CiAgICBkaXZpc2lvbnM6IF9jdHguZGl2aXNpb25zLAogICAga2V5OiBfY3R4LmRpdmlzaW9ucywKICAgIG9uUmVtb3ZlRGl2aXNpb246ICRvcHRpb25zLnJlbW92ZURpdmlzaW9uLAogICAgb25VcGRhdGVEaXZpc2lvbjogJG9wdGlvbnMudXBkYXRlRGl2aXNpb24KICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiZGl2aXNpb25zIiwgIm9uUmVtb3ZlRGl2aXNpb24iLCAib25VcGRhdGVEaXZpc2lvbiJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSwgKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9UZWxlcG9ydCwgewogICAgdG86ICIjbW9kYWxlcyIKICB9LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfbXlfZGlhbG9nLCB7CiAgICBzaG93OiAkZGF0YS5kaWFsb2dWaXNpYmxlLAogICAgIm9uVXBkYXRlOnNob3ciOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLmRpYWxvZ1Zpc2libGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIHsKICAgICJkZWZhdWx0IjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2RpdmlzaW9uc19jcmVhdGVfbGlzdCwgewogICAgICAgIG9uQWRkTmV3RGl2aXNpb25zOiAkb3B0aW9ucy5hZGROZXdEaXZpc2lvbnMKICAgICAgfSwgbnVsbCwgOAogICAgICAvKiBQUk9QUyAqLwogICAgICAsIFsib25BZGROZXdEaXZpc2lvbnMiXSldOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSwgOAogIC8qIFBST1BTICovCiAgLCBbInNob3ciXSldKSldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"mappings":";OACSA,gBAAuB;;;;;;;sBAA5BC,oBAAqD,KAArD,EAAqD;AAAhDC,OAAuB,EAAvBF,UAAgD;AAAxB,aAAM,MAAkB;AAAXG,OAAG,EAAC;AAAO,GAArD;;AAAA;;;;AACK,WAAM;;;;sBACPF,oBAAkC,IAAlC,EAAkC,IAAlC,EAAI,2BAAJ,EAA6B;AAAA;AAA7B;;;+CACmD;;;;;;;;;;;6DAHvDG,YACAH,oBAYM,KAZN,cAYM,CAXFI,UAWE,EAVFC,aAEYC,oBAFZ,EAEY;AAFAC,WAAK;AAAA,aAAEC,sBAAa,CAAIA,mBAAnB;AAAA;AAEL,GAFZ;wBAAmD;AAAA,aAEnD,YAFmD;AAAA;;;;GAAnD,CAUE,EANQC,eAAUC,wBADpBC,aAMEC,yBANF,EAME;AAJGC,aAAS,EAAEJ,cAId;AAHGK,OAAG,EAAEL,cAGR;AAFGM,oBAAc,EAAEC,uBAEnB;AADGC,oBAAc,EAAED;AACnB,GANF;;AAAA,+FAOE,CAZN,kBAaAL,aAIWO,SAJX,EAIW;AAJDC,MAAE,EAAC;AAIF,GAJX,EAAuB,CACnBd,aAEYe,oBAFZ,EAEY;AAFOC,QAAI,EAAEb,mBAEb;;aAFaA,sBAAac;;AAE1B,GAFZ;wBACI;AAAA,aAA2D,CAA3DjB,aAA2DkB,gCAA3D,EAA2D;AAAnCC,yBAAe,EAAER;AAAkB,OAA3D,EAAwD,IAAxD,EAAwD;AAAA;AAAxD,QAAwD,qBAAxD,CAA2D,CAA3D;AAAA;;;;GADJ;;AAAA,aADmB,CAAvB","names":["_imports_0","_createElementVNode","src","alt","_hoisted_1","_hoisted_3","_createVNode","_component_my_button","onClick","$data","_ctx","length","_createBlock","_component_divisions_list","divisions","key","onRemoveDivision","$options","onUpdateDivision","_Teleport","to","_component_my_dialog","show","$event","_component_divisions_create_list","onAddNewDivisions"],"sourceRoot":"","sources":["/Users/shakirov/Desktop/Новая папка/src/App.vue"],"sourcesContent":["<template>\n    <img src=\"@/assets/logo.svg\" class=\"logo\" alt=\"logo\">\n    <div class=\"container\">\n        <h1>Организационная структура</h1>\n        <my-button @click=\"dialogVisible = !dialogVisible\">\n            + Добавить\n        </my-button>\n        <divisions-list\n            v-if=\"divisions.length\"\n            :divisions=\"divisions\"\n            :key=\"divisions\"\n            @removeDivision=\"removeDivision\"\n            @updateDivision=\"updateDivision\"\n        />\n    </div>\n    <teleport to=\"#modales\">\n        <my-dialog v-model:show=\"dialogVisible\">\n            <divisions-create-list @addNewDivisions=\"addNewDivisions\"/>\n        </my-dialog>\n    </teleport>\n</template>\n\n<script>\nimport DivisionsList from \"@/components/DivisionsList\";\nimport DivisionsCreateList from \"@/components/DivisionsCreateList\";\nimport {mapState, mapGetters, mapActions, mapMutations} from 'vuex'\n\nexport default {\n    name: 'App',\n    components: {\n        DivisionsList,\n        DivisionsCreateList\n    },\n    data() {\n        return {\n            dialogVisible: false\n        }\n    },\n    computed: {\n        ...mapState({\n            divisions: state => state.divisions.divisions\n        })\n    },\n    methods: {\n        ...mapActions([\n            \"getDivisions\",\n            \"addDivisions\",\n            \"deleteDivisions\",\n            \"editDivisions\"\n        ]),\n        addNewDivisions(event) {\n            for (const item of event) {\n                this.addDivisions(item)\n                    .then(() => {\n                        this.getDivisions();\n                    })\n            }\n            this.dialogVisible = false\n        },\n        removeDivision(event) {\n            this.deleteDivisions(event)\n                .then(() => {\n                    this.getDivisions();\n                })\n        },\n        updateDivision(event) {\n            const newDivision = this.divisions.filter(item => item.id == event)\n            const division = {\n                id: newDivision[0].id,\n                name: newDivision[0].name,\n                count: newDivision[0].count,\n                children: newDivision[0].children\n            }\n            this.editDivisions(division)\n                .then(() => {\n                    this.getDivisions();\n                })\n        }\n    },\n    mounted() {\n        this.getDivisions()\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .logo {\n        position: absolute;\n        top: 20px;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n    h1 {\n        background: $background-block;\n        color: $main-title;\n        border-radius: 4px;\n        font-size: 25px;\n        padding: 10px 20px;\n    }\n    button {\n        margin: 20px 0;\n    }\n</style>\n"]}]}